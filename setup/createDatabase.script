DROP DATABASE movie_info_db;
CREATE DATABASE movie_info_db;
USE movie_info_db;
CREATE TABLE movie_info_table (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	INDEX movie_info_ind (id),
	embedable INT DEFAULT 0,
	rating DOUBLE DEFAULT 0,
	name VARCHAR(175),
	genre VARCHAR(175),
	tasteKidList VARCHAR(345),
	plot VARCHAR(350),
	year INT,
	url VARCHAR(275) DEFAULT 'NONE-ADDED',
	trailerUrl VARCHAR(275) DEFAULT 'NONE-ADDED',
	imdbUrl VARCHAR(275) DEFAULT 'NONE-ADDED',
	searched INT NOT NULL DEFAULT 0,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=INNODB;
CREATE TABLE movie_repositories_table (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(175),
	confset VARCHAR(175),
	comments VARCHAR(375),
	state INT NOT NULL DEFAULT 1 
) ENGINE=INNODB;
CREATE TABLE movie_env_table (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, 
	noMovies INT NOT NULL DEFAULT 0,
	confset INT NOT NULL,
	FOREIGN KEY(confset) REFERENCES movie_repositories_table(id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB;
CREATE TABLE movie_cache_table (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	INDEX movie_cache_ind (id),
	filename VARCHAR(250),
	path VARCHAR(350),
	confset INT NOT NULL,
	FOREIGN KEY(confset) REFERENCES movie_repositories_table(id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB;
CREATE TABLE movie_files_table (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, 
	movie_id INT NOT NULL,
	FOREIGN KEY(movie_id) REFERENCES movie_info_table(id) ON DELETE CASCADE ON UPDATE CASCADE,
	cache_id INT NOT NULL,
	FOREIGN KEY(cache_id) REFERENCES movie_cache_table(id) ON DELETE CASCADE ON UPDATE CASCADE,
	INDEX movie_files_ind (movie_id),
	quality VARCHAR(10) DEFAULT 0,
	bitrate INT NOT NULL DEFAULT 0,
	searched INT NOT NULL DEFAULT 0,
	duration TIME DEFAULT "00:00:00"
) ENGINE=INNODB;
